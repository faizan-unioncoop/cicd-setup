DEVELOPER_APP_ID = ENV["DEVELOPER_APP_ID"]
DEVELOPER_PORTAL_TEAM_ID = ENV["DEVELOPER_PORTAL_TEAM_ID"]
DEVELOPER_APP_IDENTIFIER = ENV["DEVELOPER_APP_IDENTIFIER"]
PROVISIONING_PROFILE_SPECIFIER = ENV["PROVISIONING_PROFILE_SPECIFIER"]
APPLE_ISSUER_ID = ENV["APPLE_ISSUER_ID"]
APPLE_KEY_ID = ENV["APPLE_KEY_ID"]
APPLE_KEY_CONTENT = ENV["APPLE_KEY_CONTENT"]
GIT_AUTHORIZATION = ENV["GIT_AUTHORIZATION"]
FIREBASE_APP_ID = ENV["FIREBASE_APP_ID"]
FIREBASE_CLI_TOKEN = ENV["FIREBASE_CLI_TOKEN"]

settings_to_override_release = { 
  :BUNDLE_IDENTIFIER => DEVELOPER_APP_IDENTIFIER, 
  :PROVISIONING_PROFILE_SPECIFIER => PROVISIONING_PROFILE_SPECIFIER, 
  :DEVELOPMENT_TEAM => DEVELOPER_PORTAL_TEAM_ID, 
}

default_platform(:ios)

platform :ios do

  before_all do
    setup_circle_ci
  end

  desc "Run unit tests"
  lane :tests do
    scan(scheme: "cicd-setup.xcworkspace")
  end

  desc "Export Release IPA & upload Release to App Store"
  lane :release_app do

    ##Load the App Store Connect API token to use in other fastlane tools and actions
    api_key = app_store_connect_api_key( 
      key_id: APPLE_KEY_ID,
      issuer_id: APPLE_ISSUER_ID,
      key_content: APPLE_KEY_CONTENT,
      is_key_content_base64: true
    )

    ##Increment build number before uploading
    increment_build_number(
      build_number: app_store_build_number(
        api_key: api_key,
        initial_build_number: 0,
        version: get_version_number(xcodeproj: "cicd-setup.xcodeproj"),
        live: false
      ) + 1,
    )

    ##sync your certificates and profiles across your team 
    match(
      type: 'appstore',
      app_identifier: "#{DEVELOPER_APP_IDENTIFIER}",
      git_basic_authorization: Base64.strict_encode64(GIT_AUTHORIZATION),
      readonly: false,
      api_key: api_key
    )

    ##archive application 
    build_app(
      scheme:"cicd-setup", 
      export_method:"app-store",
      skip_profile_detection:true,
      configuration: "Release",
      workspace: "cicd-setup.xcworkspace",
      xcargs: settings_to_override_release,
      export_options: {
        provisioningProfiles: { 
          DEVELOPER_APP_IDENTIFIER => PROVISIONING_PROFILE_SPECIFIER
        },
        installerSigningCertificate: "Apple Distribution"
      }
    )

    #deliver app to Firebase Distribution 
    firebase_app_distribution(
      app: FIREBASE_APP_ID,
      firebase_cli_token: FIREBASE_CLI_TOKEN,
      release_notes: "Lots of amazing new features to test out!"
    )

    #deliver app to Appstore Connect or Testflight
    deliver(
      api_key: api_key,
      submit_for_review: false,
      force: true,
      precheck_include_in_app_purchases: false,
      skip_screenshots: true,
      skip_metadata: true,
      skip_app_version_update: true,
    )
  end
end
