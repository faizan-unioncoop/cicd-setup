# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Description of what the lane does"
  lane :custom_lane do
    # add actions here: https://docs.fastlane.tools/actions
  end

  desc "To export our app"
  lane :export_app do
    match(
      type: "appstore", 
      readonly: is_ci
    )
    gym(
      workspace: "cicd-setup.xcworkspace",
      scheme: "cicd-setup",
      clean: true,
      export_method: "app-store",
      export_options: {
        provisioningProfiles: { 
          "com.ae.uc.cicd-setup123" => "match AppStore com.ae.uc.cicd-setup123",
        }
      }
    )
  end


  desc "To deliver our app to Testflight"
  lane :upload_app do
    deliver(
      ipa: "ReleaseApp.ipa",
      skip_screenshots: true,
      skip_metadata: true,
      skip_app_version_update: true,
      force: true
    )  
  end

  # desc "To deliver our app to Firebase"
  # lane :upload_firebase_app do
  #   firebase_app_distribution(
  #       ipa_path: "ReleaseApp.ipa",
  #       app: "1:1029978588996:ios:c1bb15ae733377be077911",
  #       release_notes: "Lots of amazing new features to test out!"
  #   )
  # end



  desc "To release our app"
  lane :release_app do
    increment_build_number(
      build_number: latest_testflight_build_number(
        initial_build_number: 1,
        version: get_version_number(xcodeproj: "cicd-setup.xcodeproj")
      ) + 1,
    )
    match(
      type: "appstore",
      app_identifier: ["com.ae.uc.cicd-setup123"],
      readonly: true
    )
    gym(
      workspace: "cicd-setup.xcworkspace",
      scheme: "cicd-setup",
      clean: true,
      export_method: "app-store"
    )
    app_store_connect_api_key( 
      key_id: $APP_STORE_CONNECT_API_KEY_KEY_ID, 
      issuer_id: $APP_STORE_CONNECT_API_KEY_ISSUER_ID, 
      key_content: $APP_STORE_CONNECT_API_KEY_KEY,
      is_key_content_base64: true
    )
    pilot(
      distribute_external: true,
      notify_external_testers: true,
      groups: ["external-testers"],
      changelog: "This is another new build from CircleCI!"
    )
  end
end
